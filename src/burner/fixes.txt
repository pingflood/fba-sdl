

conc.cpp:

static void CheatError(TCHAR* pszFilename, INT32 nLineNumber, CheatInfo* pCheat, TCHAR* pszInfo, TCHAR* pszLine)
{
#if defined (BUILD_WIN32)
	FBAPopupAddText(PUF_TEXT_NO_TRANSLATE, _T("Cheat file %s is malformed.\nPlease remove or repair the file.\n\n"), pszFilename);
	if (pCheat) {
		FBAPopupAddText(PUF_TEXT_NO_TRANSLATE, _T("Parse error at line %i, in cheat \"%s\".\n"), nLineNumber, pCheat->szCheatName);
	} else {
		FBAPopupAddText(PUF_TEXT_NO_TRANSLATE, _T("Parse error at line %i.\n"), nLineNumber);
	}

	if (pszInfo) {
		FBAPopupAddText(PUF_TEXT_NO_TRANSLATE, _T("Problem:\t%s.\n"), pszInfo);
	}
	if (pszLine) {
		FBAPopupAddText(PUF_TEXT_NO_TRANSLATE, _T("Text:\t%s\n"), pszLine);
	}

	FBAPopupDisplay(PUF_TYPE_ERROR);
#elif defined(BUILD_SDL)
	TCHAR szText[1024] = _T("");

	_stprintf(szText, _T("Cheat file %s is malformed.\nPlease remove or repair the file.\n\n"), pszFilename);
	if (pCheat) {
		_stprintf(szText + _tcslen(szText), _T("Parse error at line %i, in cheat \"%s\".\n"), nLineNumber, pCheat->szCheatName);
	} else {
		_stprintf(szText + _tcslen(szText), _T("Parse error at line %i.\n"), nLineNumber);
	}

	if (pszInfo) {
		_stprintf(szText + _tcslen(szText), _T("Problem:\t%s.\n"), pszInfo);
	}
	if (pszLine) {
		_stprintf(szText + _tcslen(szText), _T("Text:\t%s\n"), pszLine);
	}

	AppError(szText, 1);
#endif
}



burner.h:
// ---------------------------------------------------------------------------
// OS dependent functionality

#if defined (BUILD_WIN32)
 #include "burner_win32.h"
 #include <shellapi.h>
#include <shlwapi.h>
#include "net.h"
#include "dwmapi_core.h"
#elif defined (BUILD_SDL)
 #include "burner_sdl.h"
#endif

#include "png.h"